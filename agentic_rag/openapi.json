{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/login": {"post": {"summary": "Login", "operationId": "login_login_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/": {"get": {"summary": "Index", "operationId": "index__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/categories/all": {"get": {"tags": ["Categories"], "summary": "Get All Categories", "description": "Returns an array of the available categories.", "operationId": "get_all_categories_categories_all_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CategoryResponse"}, "type": "array", "title": "Response Get All Categories Categories All Get"}}}}}}}, "/categories/add_category": {"post": {"tags": ["Categories"], "summary": "Category Add", "description": "Lets a user Add/subscribe to a calendar.", "operationId": "category_add_categories_add_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryAddRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubscriptionResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/categories/remove_category": {"post": {"tags": ["Categories"], "summary": "Category Remove", "description": "Unsubscribes the user from a category.", "operationId": "category_remove_categories_remove_category_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryRemoveRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/categories/events": {"get": {"tags": ["Categories"], "summary": "All Events", "description": "Returns an array of all events present in a given calendar.", "operationId": "all_events_categories_events_get", "parameters": [{"name": "category_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Category Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EventResponse"}, "title": "Response All Events Categories Events Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/categories/get_category": {"get": {"tags": ["Categories"], "summary": "Get Category", "description": "Gets the details of a calendar.", "operationId": "get_category_categories_get_category_get", "parameters": [{"name": "category_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Category Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/categories/get_ics/{file_name}": {"get": {"tags": ["Categories"], "summary": "Get Ics", "operationId": "get_ics_categories_get_ics__file_name__get", "parameters": [{"name": "file_name", "in": "path", "required": true, "schema": {"type": "string", "title": "File Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/categories/get_page": {"get": {"tags": ["Categories"], "summary": "Get Category Page", "operationId": "get_category_page_categories_get_page_get", "parameters": [{"name": "uuid", "in": "query", "required": true, "schema": {"type": "string", "title": "Uuid"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/categories/trending": {"get": {"tags": ["Categories"], "summary": "Trending", "description": "Returns an array of trending calendars on the platform.", "operationId": "trending_categories_trending_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CategoryResponse"}, "type": "array", "title": "Response Trending Categories Trending Get"}}}}}}}, "/categories/search": {"get": {"tags": ["Categories"], "summary": "Search", "description": "Lets you search calendars given a 'query'. The query is what is searched and compared against the names of calendars in the database.", "operationId": "search_categories_search_get", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "title": "Query"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CategoryResponse"}, "title": "Response Search Categories Search Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/categories/me": {"get": {"tags": ["Categories"], "summary": "My Subscriptions", "description": "Returns an array of calendars subscribed by the user.", "operationId": "my_subscriptions_categories_me_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CategoryResponse"}, "type": "array", "title": "Response My Subscriptions Categories Me Get"}}}}}}}, "/categories/breadcrumb": {"get": {"tags": ["Categories"], "summary": "Get Breadcrumb", "operationId": "get_breadcrumb_categories_breadcrumb_get", "parameters": [{"name": "uuid", "in": "query", "required": true, "schema": {"type": "string", "title": "Uuid"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/authentication/": {"post": {"tags": ["Auth"], "summary": "Authentication", "operationId": "authentication_authentication__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/authentication/get_user": {"post": {"tags": ["Auth"], "summary": "Get User", "description": "Request headers **must** contain `token`.", "operationId": "get_user_authentication_get_user_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/authentication/token": {"post": {"tags": ["Auth"], "summary": "Get Token", "description": "Get JWT for the user.", "operationId": "get_token_authentication_token_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenModel"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/authentication/sign_up": {"post": {"tags": ["Auth"], "summary": "Sign Up", "operationId": "sign_up_authentication_sign_up_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SignUpRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/authentication/admin-login": {"get": {"tags": ["Auth"], "summary": "Admin Login", "operationId": "admin_login_authentication_admin_login_get", "parameters": [{"name": "email", "in": "query", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/events/all": {"get": {"tags": ["Events"], "summary": "All Events", "description": "List of all events on the platform", "operationId": "all_events_events_all_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/EventResponse"}, "type": "array", "title": "Response All Events Events All Get"}}}}}}}, "/events/related_categories": {"get": {"tags": ["Events"], "summary": "Related Categories", "description": "Categories/Calendars related to an event", "operationId": "related_categories_events_related_categories_get", "parameters": [{"name": "event_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Event Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CategoryResponse"}, "title": "Response Related Categories Events Related Categories Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/events/upcoming": {"get": {"tags": ["Events"], "summary": "Upcoming", "description": "List of upcoming events on the platform", "operationId": "upcoming_events_upcoming_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/EventResponse"}, "type": "array", "title": "Response Upcoming Events Upcoming Get"}}}}}}}, "/admin/categories/get_category": {"get": {"tags": ["Admin"], "summary": "Get Category From Parent", "operationId": "get_category_from_parent_admin_categories_get_category_get", "parameters": [{"name": "parent_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Parent Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/update": {"post": {"tags": ["Admin"], "summary": "Update Category", "operationId": "update_category_admin_categories_update_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryEditRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/category_info": {"get": {"tags": ["Admin"], "summary": "Category Info", "operationId": "category_info_admin_categories_category_info_get", "parameters": [{"name": "category_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Category Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/create": {"post": {"tags": ["Admin"], "summary": "Create Category", "operationId": "create_category_admin_categories_create_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateCategoryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/bulk": {"post": {"tags": ["Admin"], "summary": "Bulk Upload Events", "operationId": "bulk_upload_events_admin_categories_bulk_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_bulk_upload_events_admin_categories_bulk_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/delete": {"post": {"tags": ["Admin"], "summary": "Delete Category", "operationId": "delete_category_admin_categories_delete_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryDeleteRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/mailing-list": {"get": {"tags": ["Admin"], "summary": "Mailing List", "operationId": "mailing_list_admin_categories_mailing_list_get", "parameters": [{"name": "category_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Category Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/ranked": {"get": {"tags": ["Admin"], "summary": "Ranked", "operationId": "ranked_admin_categories_ranked_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/admin/categories/move": {"post": {"tags": ["Admin"], "summary": "Move", "operationId": "move_admin_categories_move_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryMoveRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/categories/list": {"get": {"tags": ["Admin"], "summary": "List Categories", "operationId": "list_categories_admin_categories_list_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/admin/events/edit": {"post": {"tags": ["Admin"], "summary": "Edit Event", "operationId": "edit_event_admin_events_edit_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/admin/analytics/all-users": {"get": {"tags": ["Admin"], "summary": "All Users", "operationId": "all_users_admin_analytics_all_users_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/admin/analytics/cohort": {"get": {"tags": ["Admin"], "summary": "Cohort", "operationId": "cohort_admin_analytics_cohort_get", "parameters": [{"name": "start", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Start"}}, {"name": "end", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "End"}}, {"name": "group_size", "in": "query", "required": true, "schema": {"type": "integer", "title": "Group Size"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/users/all": {"get": {"tags": ["Admin"], "summary": "All Users", "operationId": "all_users_admin_users_all_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/admin/plans/create": {"post": {"tags": ["Admin"], "summary": "Create Plan", "operationId": "create_plan_admin_plans_create_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PlanSchema"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/misc/feedback": {"post": {"summary": "Feedback", "operationId": "feedback_misc_feedback_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FeedbackSchema"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/payments/plans": {"get": {"tags": ["Payments"], "summary": "Plans", "description": "List of paid plans available on the platform.", "operationId": "plans_payments_plans_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/PlanResponse"}, "type": "array", "title": "Response Plans Payments Plans Get"}}}}}}}, "/payments/checkout": {"post": {"tags": ["Payments"], "summary": "Checkout", "operationId": "checkout_payments_checkout_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CheckoutSession"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/payments/stripe-webhook": {"post": {"tags": ["Payments"], "summary": "Stripe Webhook", "operationId": "stripe_webhook_payments_stripe_webhook_post", "parameters": [{"name": "stripe-signature", "in": "header", "required": false, "schema": {"type": "string", "title": "Stripe-Signature"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AuthenticationRequest": {"properties": {"email": {"type": "string", "title": "Email"}}, "type": "object", "required": ["email"], "title": "AuthenticationRequest"}, "Body_bulk_upload_events_admin_categories_bulk_post": {"properties": {"category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "offset": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Offset"}, "file": {"type": "string", "format": "binary", "title": "File"}}, "type": "object", "required": ["category_id", "offset", "file"], "title": "Body_bulk_upload_events_admin_categories_bulk_post"}, "CategoryAddRequest": {"properties": {"uuid": {"type": "string", "title": "Uuid"}}, "type": "object", "required": ["uuid"], "title": "CategoryAddRequest"}, "CategoryDeleteRequest": {"properties": {"id": {"type": "integer", "title": "Id"}}, "type": "object", "required": ["id"], "title": "CategoryDeleteRequest"}, "CategoryEditRequest": {"properties": {"name": {"type": "string", "title": "Name"}, "addable": {"type": "boolean", "title": "Addable"}, "trending": {"type": "boolean", "title": "Trending"}, "icon": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Icon"}, "custom_metadata": {"type": "object", "title": "Custom Metadata"}, "poster": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Poster"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}}, "type": "object", "required": ["name", "addable", "trending", "icon", "custom_metadata", "poster", "category_id"], "title": "CategoryEditRequest"}, "CategoryMoveRequest": {"properties": {"category_id": {"type": "integer", "title": "Category Id"}, "target_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Target Id"}}, "type": "object", "required": ["category_id", "target_id"], "title": "CategoryMoveRequest"}, "CategoryRemoveRequest": {"properties": {"id": {"type": "integer", "title": "Id"}}, "type": "object", "required": ["id"], "title": "CategoryRemoveRequest"}, "CategoryResponse": {"properties": {"id": {"type": "integer", "title": "Id", "description": "The unique identifier for the category."}, "parent_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Parent Id", "description": "The unique identifier of the parent category, if applicable."}, "name": {"type": "string", "title": "Name", "description": "The name of the category."}, "icon": {"type": "string", "title": "Icon", "description": "The URL of the icon representing the category."}, "custom_metadata": {"additionalProperties": {"anyOf": [{"type": "string"}, {"type": "null"}]}, "type": "object", "title": "Custom Metadata", "description": "A dictionary containing additional metadata for the category."}, "last_modified": {"type": "string", "title": "Last Modified", "description": "The timestamp indicating the last modification of the category."}, "poster": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Poster", "description": "The URL of the poster image associated with the category, if any."}, "addable": {"type": "boolean", "title": "Addable", "description": "Indicates whether the category is addable by users."}, "trending": {"type": "boolean", "title": "Trending", "description": "Indicates whether the category is currently trending."}, "ics": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Ics", "description": "The link to the ICS calendar file for the category"}, "uuid": {"type": "string", "title": "Uuid", "description": "The universally unique identifier for the category."}}, "type": "object", "required": ["id", "name", "icon", "custom_metadata", "last_modified", "addable", "trending", "uuid"], "title": "CategoryResponse"}, "CheckoutSession": {"properties": {"plan_id": {"type": "integer", "title": "Plan Id", "description": "Plan ID in our database"}}, "type": "object", "required": ["plan_id"], "title": "CheckoutSession"}, "CreateCategoryRequest": {"properties": {"name": {"type": "string", "title": "Name"}, "addable": {"type": "boolean", "title": "Addable"}, "trending": {"type": "boolean", "title": "Trending"}, "icon": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Icon"}, "custom_metadata": {"type": "object", "title": "Custom Metadata"}, "poster": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Poster"}, "parent_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Parent Id"}}, "type": "object", "required": ["name", "addable", "trending", "icon", "custom_metadata", "poster", "parent_id"], "title": "CreateCategoryRequest"}, "EventResponse": {"properties": {"id": {"type": "integer", "title": "Id", "description": "The unique identifier for the event."}, "title": {"type": "string", "title": "Title", "description": "The title of the event."}, "all_day": {"type": "boolean", "title": "All Day", "description": "Indicates if the event lasts all day."}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "The description of the event."}, "location": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location", "description": "The location of the event."}, "start_time": {"type": "string", "title": "Start Time", "description": "The start time of the event in ISO 8601 format."}, "end_time": {"type": "string", "title": "End Time", "description": "The end time of the event in ISO 8601 format."}, "uuid": {"type": "string", "title": "Uuid", "description": "The universally unique identifier for the event."}, "custom_metadata": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Custom Metadata", "description": "A dictionary of custom metadata for the event, if any."}, "categories": {"items": {"type": "integer"}, "type": "array", "title": "Categories", "description": "A list of calendar IDs associated with the event."}}, "type": "object", "required": ["id", "title", "all_day", "start_time", "end_time", "uuid", "categories"], "title": "EventResponse"}, "FeedbackSchema": {"properties": {"concern": {"type": "string", "title": "Concern"}, "description": {"type": "string", "title": "Description"}, "page_url": {"type": "string", "title": "Page Url"}}, "type": "object", "required": ["concern", "description", "page_url"], "title": "FeedbackSchema"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "LoginRequest": {"properties": {"email": {"type": "string", "title": "Email"}}, "type": "object", "required": ["email"], "title": "LoginRequest"}, "PlanResponse": {"properties": {"id": {"type": "integer", "title": "Id", "description": "The unique identifier for the plan."}, "product_id": {"type": "string", "title": "Product Id", "description": "The unique identifier for the product."}, "price_id": {"type": "string", "title": "Price Id", "description": "The unique identifier for the price."}, "name": {"type": "string", "title": "Name", "description": "The name of the plan."}, "date_created": {"type": "string", "title": "Date Created", "description": "The date and time when the plan was created in ISO 8601 format."}, "description": {"type": "string", "title": "Description", "description": "The description of the plan."}, "access": {"type": "integer", "title": "Access", "description": "Access level granted by the plan."}, "amount": {"type": "integer", "title": "Amount", "description": "The cost of the plan in the smallest currency unit (e.g., cents for USD)."}, "duration": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Duration", "description": "The duration of the plan, if applicable."}}, "type": "object", "required": ["id", "product_id", "price_id", "name", "date_created", "description", "access", "amount"], "title": "PlanResponse"}, "PlanSchema": {"properties": {"product_id": {"type": "string", "title": "Product Id", "description": "Product ID from stripe"}, "price_id": {"type": "string", "title": "Price Id", "description": "Price ID from stripe"}, "name": {"type": "string", "title": "Name", "description": "Plan name"}, "description": {"type": "string", "title": "Description", "description": "Plan description"}, "access": {"type": "integer", "title": "Access", "description": "Plan access"}}, "type": "object", "required": ["product_id", "price_id", "name", "description", "access"], "title": "PlanSchema"}, "SignUpRequest": {"properties": {"name": {"type": "string", "title": "Name"}, "email": {"type": "string", "title": "Email"}, "sign_up_method": {"type": "string", "title": "Sign Up Method"}, "pfp": {"type": "string", "title": "Pfp"}}, "type": "object", "required": ["name", "email", "sign_up_method", "pfp"], "title": "SignUpRequest"}, "SubscriptionResponse": {"properties": {"subscription_uuid": {"type": "string", "title": "Subscription Uuid", "description": "The unique identifier for the subscription."}, "me": {"items": {"$ref": "#/components/schemas/CategoryResponse"}, "type": "array", "title": "Me", "description": "A list of categories associated with the subscription."}}, "type": "object", "required": ["subscription_uuid", "me"], "title": "SubscriptionResponse"}, "TokenModel": {"properties": {"email": {"type": "string", "title": "Email"}}, "type": "object", "required": ["email"], "title": "TokenModel"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}